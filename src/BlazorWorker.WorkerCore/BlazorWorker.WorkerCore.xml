<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlazorWorker.WorkerCore</name>
    </assembly>
    <members>
        <member name="T:BlazorWorker.WorkerCore.MessageService">
            <summary>
            Simple static message service that runs in the worker thread.
            </summary>
        </member>
        <member name="T:BlazorWorker.Core.WorkerInitOptions">
            <summary>
            Options for initializing the worker.
            </summary>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptions.#ctor">
            <summary>
            Creates a new instance of WorkerInitOptions
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.DeployPrefix">
            <summary>
            Specifies the location of binaries
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.WasmRoot">
            <summary>
            Specifieds the location of the wasm binary
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.Debug">
            <summary>
            Outputs additional debug information to the console
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.DependentAssemblyFilenames">
            <summary>
            Specifies a list of assembly files names (dlls) that should be loaded when initializing the worker.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.MessageEndPoint">
            <summary>
            Mono-wasm-annotated endpoint for sending messages to the worker. Experts only.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.InitEndPoint">
            <summary>
            Mono-wasm-annotated endpoint for instanciating the worker. Experts only.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.CallbackMethod">
            <summary>
            Unique blazor identifier for handling callbacks. As referenced by JSInvokableAttribute. Experts only.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.UseConventionalServiceAssembly">
            <summary>
            If set to true, deducts the name of the assembly containing the service using the service type assembly name + dll extension as file name, and adds it as a dependency.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.EndInvokeCallBackEndpoint">
            <summary>
            Mono-wasm-annotated endpoint for doing callbacks on self invocations from the worker. Experts only.
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.RuntimePreprocessorSymbols">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives
            </summary>
        </member>
        <member name="P:BlazorWorker.Core.WorkerInitOptions.EnvMap">
            <summary>
            Sets environment variables in the target worker. 
            </summary>
            <remarks>
            Defaults to a single entry: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT = '1'.
            For more information see https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-environment-variables
            </remarks>
        </member>
        <member name="T:BlazorWorker.Core.WorkerInitOptionsExtensions">
            <summary>
            Contains convenience extensions for <see cref="T:BlazorWorker.Core.WorkerInitOptions"/>
            </summary>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.AddAssemblies(BlazorWorker.Core.WorkerInitOptions,System.String[])">
            <summary>
            Adds the specified assembly filesnames as dependencies
            </summary>
            <param name="source"></param>
            <param name="dependentAssemblyFilenames"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.AddConventionalAssemblyOfService(BlazorWorker.Core.WorkerInitOptions)">
            <summary>
            Deducts the name of the assembly containing the service using the the service type assembly name with dll extension as file name, and adds it as a dependency.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.AddAssemblyOf``1(BlazorWorker.Core.WorkerInitOptions)">
            <summary>
            Deducts the name of the assembly containing the specified <typeparamref name="T"/> using the assembly name with dll extension as file name, and adds it as a dependency.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.AddAssemblyOfType(BlazorWorker.Core.WorkerInitOptions,System.Type)">
            <summary>
            Deducts the name of the assembly containing the specified <paramref name="type"/> using the assembly name with dll extension as file name, and adds it as a dependency.
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.AddHttpClient(BlazorWorker.Core.WorkerInitOptions)">
            <summary>
            Registers the neccessary dependencies for injecting or instanciating <see cref="T:System.Net.Http.HttpClient"/> in the background service.
            </summary>
            <param name="source"></param>
            <returns></returns>
            <remarks>When this method has been called, <see cref="T:System.Net.Http.HttpClient"/> can be used inside the service either by instanciating it or by injection into the constructor.</remarks>
        </member>
        <member name="M:BlazorWorker.Core.WorkerInitOptionsExtensions.SetEnv(BlazorWorker.Core.WorkerInitOptions,System.String,System.String)">
            <summary>
            Set the specified <paramref name="environmentVariableName"/> to the specified <paramref name="value"/> when the worker runtime has been initialized
            </summary>
            <param name="source"></param>
            <param name="environmentVariableName"></param>
            <param name="value"></param>
            <returns></returns>
            <remarks>
            For more information see https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-environment-variables
            </remarks>
        </member>
    </members>
</doc>
